package mathz

import "github.com/go2pkg/constraints"

func Max[T constraints.OrderedNumeric](a, b T) T {
	if a > b {
		return a
	}
	return b
}

func Min[T constraints.OrderedNumeric](a, b T) T {
	if a < b {
		return a
	}
	return b
}

func MaxOf[T constraints.OrderedNumeric](numbers ...T) T {
	if len(numbers) == 0 {
		return 0
	}
	max := numbers[0]
	for i := 1; i < len(numbers); i++ {
		if numbers[i] > max {
			max = numbers[i]
		}
	}
	return max
}

func MinOf[T constraints.OrderedNumeric](numbers ...T) T {
	if len(numbers) == 0 {
		return 0
	}
	min := numbers[0]
	for i := 1; i < len(numbers); i++ {
		if numbers[i] < min {
			min = numbers[i]
		}
	}
	return min
}
